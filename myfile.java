public class Solution {		public static String removeChar(final String str, final char cha) {		if (str == null)			return null;		final StringBuilder builder = new StringBuilder();		for (char character : str.toCharArray()) {			if (character != cha) {				builder.append(character);			}			}		return builder.toString();	}	public static String removeCharOneLine(final String str, final char cha) {		if (str == null)			return null;		return str.replaceAll(String.valueOf(cha), "");		}}public class test {			@Test	public void test1() throws Exception {		String inputString = "test";		String expectedResult = "es";		String actaulResult = StringUtils.removeChar(inputString, 't');		assertEquals(actaulResult, expectedResult);	}	@Test	public void test2() throws Exception {		String inputString = "test";		String expectedResult = "es";		String actaulResult = StringUtils.removeCharOneLine(inputString, 't');		assertEquals(actaulResult, expectedResult);	}	@Test	public void test3() throws Exception {		String inputString = "test ";		String expectedResult = "test ";		String actaulResult = StringUtils.removeChar(inputString, 'p');		assertEquals(actaulResult, expectedResult);	}	@Test	public void test4() throws Exception {		String inputString = " test ";		String expectedResult = " test";		String actaulResult = StringUtils.removeChar(inputString, ' ');		assertEquals(actaulResult, expectedResult);	}	@Test	public void test5() throws Exception {		String inputString = null;		String expectedResult = null;		String actaulResult = StringUtils.removeChar(inputString, 't');		assertEquals(actaulResult, expectedResult);	}}